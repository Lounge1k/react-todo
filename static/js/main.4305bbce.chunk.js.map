{"version":3,"sources":["components/input/input.module.css","app.module.css","components/todo-list-item/todo-list-item.module.css","components/todo-list/todo-list.module.css","store/index.ts","components/input/input.component.tsx","components/todo-list-item/todo-list-item.component.tsx","components/todo-list/todo-list.component.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["module","exports","StoreContext","createContext","todoStore","id","todos","completeTodo","todoItem","getTodoItemById","completed","addToDo","name","todo","push","find","item","makeAutoObservable","this","Input","observer","useState","value","setValue","useContext","className","styles","InputWrapper","noValidate","onSubmit","e","preventDefault","trim","aria-label","type","onChange","target","Btn","TodoListItem","props","onClick","style","TodoListItem__Wrapper","TodoListItem__Completed","TodoListItem__Name","ToDoList","TodoList","map","App","Wrapper","AppHeader","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.4305bbce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"space_xs\":\"10px\",\"space_s\":\"15px\",\"color_dark\":\"#282c34\",\"color_focus\":\"red\",\"font_m\":\"4vh\",\"InputWrapper\":\"input_InputWrapper__xH47a\",\"Input\":\"input_Input__26tJz\",\"Btn\":\"input_Btn__OCxOb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color_dark\":\"#282c34\",\"color_light\":\"#fff\",\"space_xs\":\"10px\",\"space_l\":\"30px\",\"font_l\":\"5vh\",\"Wrapper\":\"app_Wrapper__3k4WP\",\"AppHeader\":\"app_AppHeader__ajB4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color_dark\":\"#282c34\",\"color_light\":\"#fff\",\"color_focus\":\"red\",\"space_xs\":\"10px\",\"space_s\":\"15px\",\"font_m\":\"4vh\",\"TodoListItem__Wrapper\":\"todo-list-item_TodoListItem__Wrapper__1ybpl\",\"TodoListItem__Completed\":\"todo-list-item_TodoListItem__Completed__8A-3L\",\"TodoListItem__Name\":\"todo-list-item_TodoListItem__Name__NbqKz\",\"TodoListItem__BtnComplete\":\"todo-list-item_TodoListItem__BtnComplete__MapPD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"space_m\":\"20px\",\"font_m\":\"4vh\",\"TodoList\":\"todo-list_TodoList__3IFgM\"};","import {makeAutoObservable} from \"mobx\";\nimport {createContext} from \"react\";\nimport { ToDoItem } from '../types';\n\nexport class ToDoStore {\n    protected id = 0;\n\n    todos:ToDoItem[] = []\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    completeTodo = (id: number): void => {\n        const todoItem = this.getTodoItemById(id);\n        if (todoItem) {\n            todoItem.completed = !todoItem.completed;\n        }\n    }\n\n    addToDo = (name: string): void => {\n        const todo = {\n            name,\n            id: ++this.id,\n            completed: false\n        }\n        this.todos.push(todo);\n    }\n\n    private getTodoItemById = (id: number): ToDoItem | undefined => {\n        return this.todos.find(item => item.id === id)\n    }\n\n}\n\nexport const StoreContext = createContext<ToDoStore>({} as ToDoStore)\nexport const todoStore = new ToDoStore()\n","import React, {useContext, useState} from 'react';\nimport styles from './input.module.css';\nimport {StoreContext} from \"../../store\";\nimport { observer } from \"mobx-react-lite\"\n\nconst Input = observer(() => {\n    const [ value, setValue ] = useState<string>('');\n    const { addToDo } = useContext(StoreContext);\n    const createTodo = (e: React.FormEvent<HTMLFormElement>): void => {\n        e.preventDefault();\n        if (value.trim()) {\n            addToDo(value);\n            setValue('');\n        }\n    }\n    const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(e.target.value);\n    }\n    return (\n        <form className={styles.InputWrapper} noValidate onSubmit={createTodo}>\n            <input aria-label=\"Enter Todo\" type='text' name=\"todoName\" value={value} onChange={changeHandler} className={styles.Input}/>\n            {value.trim() && <button aria-label={`Create Todo with name ${value}`} className={styles.Btn} type=\"submit\">+</button>}\n        </form>\n    )\n});\n\nexport default Input;\n","import React, { useContext } from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport style from './todo-list-item.module.css';\nimport { ToDoItem } from '../../types';\nimport { StoreContext } from '../../store';\n\ninterface TodoListItemProps {\n    todo: ToDoItem;\n}\n\nconst TodoListItem = observer((props: TodoListItemProps) => {\n    const { completeTodo } = useContext(StoreContext);\n\n    const toggleState = () => {\n        completeTodo(props.todo.id);\n    }\n\n    return (\n        <button aria-label={`Toggle todo completion with name ${props.todo.name}`} onClick={toggleState} className={`${style.TodoListItem__Wrapper} ${props.todo.completed ? style.TodoListItem__Completed : ''}`}>\n            <div className={style.TodoListItem__Name}>{props.todo.name}</div>\n        </button>\n    )\n})\n\nexport default TodoListItem;\n","import React, {useContext} from 'react';\nimport { observer } from \"mobx-react-lite\"\nimport {StoreContext} from '../../store';\nimport style from './todo-list.module.css'\nimport TodoListItem from \"../todo-list-item/todo-list-item.component\";\n\nconst ToDoList = observer(() => {\n    const {todos} = useContext(StoreContext);\n    return (\n        <div className={style.TodoList}>\n            {todos.map((todo) =>\n                <TodoListItem key={todo.id} todo={todo}/>\n            )}\n        </div>\n    )\n})\n\nexport default ToDoList\n","import Input from './components/input/input.component';\nimport styles from './app.module.css';\nimport { observer } from 'mobx-react-lite';\nimport ToDoList from \"./components/todo-list/todo-list.component\";\n\nconst App = observer(() => {\n    return (\n        <div className={styles.Wrapper}>\n            <header className={styles.AppHeader}>\n                <span className={styles.AppHeader}>Todo List</span>\n            </header>\n            <main>\n                <Input/>\n                <ToDoList />\n            </main>\n        </div>\n    );\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { todoStore, StoreContext } from \"./store\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreContext.Provider value={todoStore}>\n            <App/>\n        </StoreContext.Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}